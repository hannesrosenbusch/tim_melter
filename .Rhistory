#ask for proportions
for(pred in selected_predictors){
desired_proportions = list(desired_proportions, rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred]))))
}
levels_of_predictors["gender_group"]
desired_proportions
desired_proportions = list()
#ask for proportions
for(pred in selected_predictors){
desired_proportions = list(desired_proportions, rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred]))))
}
levels_of_predictors["gender_group"]
desired_proportions
desired_proportions = list()
#ask for proportions
for(pred in selected_predictors){
desired_proportions = list(desired_proportions, rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred]))))
}
#levels_of_predictors["gender_group"]
desired_proportions
desired_proportions = list()
#ask for proportions
for(pred in selected_predictors){
desired_proportions = c(desired_proportions, rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred]))))
}
#levels_of_predictors["gender_group"]
desired_proportions
desired_proportions = list()
#ask for proportions
for(pred in selected_predictors){
desired_proportions = c(desired_proportions, rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred]))))
}
#levels_of_predictors["gender_group"]
desired_proportions
desired_proportions = list()
#ask for proportions
for(pred in selected_predictors){
desired_proportions[[length(desired_proportions) + 1]] = rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred])))
}
#levels_of_predictors["gender_group"]
desired_proportions
desired_proportions = list()
#ask for proportions
for(pred in selected_predictors){
desired_proportions[[length(desired_proportions) + 1]] = setNames(rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred]))), sort(unique(unlist(levels_of_predictors[pred]))))
}
#levels_of_predictors["gender_group"]
namesdesired_proportions
desired_proportions = list()
#ask for proportions
for(pred in selected_predictors){
desired_proportions[[length(desired_proportions) + 1]] = setNames(rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred]))), sort(unique(unlist(levels_of_predictors[pred]))))
}
#levels_of_predictors["gender_group"]
desired_proportions
#levels_of_predictors["gender_group"]
desired_proportions[0]
#levels_of_predictors["gender_group"]
desired_proportions[1]
for(pred in selected_predictors){
desired_proportions[[length(desired_proportions) + 1]] = setNames(rep(1 / length(unlist(levels_of_predictors[pred])), length(unlist(levels_of_predictors[pred]))), sort(unique(unlist(levels_of_predictors[pred]))))
}
#levels_of_predictors["gender_group"]
names(desired_proportions) = selected_predictors
desired_proportions[1]
levels_of_predictors = lapply(taxes_survey[selected_predictors], function(x)sort(unique(x)))
shiny::runApp()
shiny::runApp()
library(dplyr)
df %>%
group_by(Attribute) %>%
expand.grid(Levels)
df %>%
group_by(Attributes) %>%
expand.grid(Levels)
library(dplyr)
df = data.table::fread("example_marginal_proportions.csv", data.table = F)
df %>%
group_by(Attributes) %>%
expand.grid(Levels)
df %>%
group_by(Attribute) %>%
expand.grid(Level)
df %>%
group_by(Attribute) %>%
expand.grid(.$Level)
df %>%
group_by(Attribute) %>%
tidyr::expand(Level)
df %>%
group_by(Attribute) %>%
tidyr::crossing(Level)
df %>%
group_by(Attribute) %>%
tidyr::pivot_wider(., names_from = Attribute, values_from = Level)
df %>%
group_by(Attribute) %>%
tidyr::pivot_wider(., names_from = Attribute, values_from = proportion)
df %>%
group_by(Attribute) %>%
tidyr::pivot_wider(., names_from = Level, values_from = proportion)
split(df$Level, df$Attribute)
expand.grid(split(df$Level, df$Attribute))
product(c(1,2,3))
prod(c(1,2,3))
combos$proportion = NA
for(i in 1:nrow(combos)){
props = c()
for(j in 1:ncol(combos)){
current_attribute = colnames(combos)[j]
current_level = combos[i, current_attribute]
prop = df$proportion[df$Attribute == current_attribute, & df$Level == current_level]
props = c(props, prop)
}
combos$propotion[i] = prod(prods)
}
combos = expand.grid(split(df$Level, df$Attribute))
combos$proportion = NA
for(i in 1:nrow(combos)){
props = c()
for(j in 1:ncol(combos)){
current_attribute = colnames(combos)[j]
current_level = combos[i, current_attribute]
prop = df$proportion[df$Attribute == current_attribute, & df$Level == current_level]
props = c(props, prop)
}
combos$propotion[i] = prod(prods)
}
for(i in 1:nrow(combos)){
props = c()
for(j in 1:ncol(combos)){
current_attribute = colnames(combos)[j]
current_level = combos[i, current_attribute]
prop = df$proportion[df$Attribute == current_attribute & df$Level == current_level]
props = c(props, prop)
}
combos$propotion[i] = prod(prods)
}
combos = expand.grid(split(df$Level, df$Attribute))
combos$proportion = NA
for(i in 1:nrow(combos)){
props = c()
for(j in 1:ncol(combos)){
current_attribute = colnames(combos)[j]
current_level = combos[i, current_attribute]
prop = df$proportion[df$Attribute == current_attribute & df$Level == current_level]
props = c(props, prop)
}
combos$propotion[i] = prod(props)
}
View(combos)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(ggplot2)
average = 0.5
mtcars$mpg
average = 13
mtcars$mpg
library(ggplot2)
ggplot()+
geom_bar(mtcars$mpg)
ggplot()+
geom_bar(aes(mtcars$mpg), stat = "identity")
ggplot()+
geom_bar(aes(x = "mpg", y = mtcars$mpg), stat = "identity")
ggplot()+
geom_bar(aes(x = "mpg", y = mtcars$mpg), stat = "mean")
ggplot()+
geom_bar(aes(x = "mpg", y = mtcars$mpg))
ggplot()+
geom_bar(aes(x = "mpg", y = mean(mtcars$mpg)), stat = "identity")
ggplot()+
geom_bar(aes(x = "mpg", y = mean(mtcars$mpg)), stat = "identity") +
theme_bw()
ggplot()+
geom_bar(aes(x = "mpg", y = mean(mtcars$mpg)), stat = "identity", fill = "white") +
theme_bw()
ggplot()+
geom_bar(aes(x = "mpg", y = mean(mtcars$mpg)), stat = "identity", fill = "white", color = "black") +
theme_bw()
ggplot()+
geom_bar(aes(x = "original sample", y = mean(mtcars$mpg)), stat = "identity", fill = "white", color = "black") +
theme_bw()
upper = mean(mtcars$mpg) + 1.96 * (sd(mtcars$mpg)/ sqrt(sum(!is.na(mtcars$mpg))))
install.packages("plotrix")
plotrix::std.error(mtcars$mpg)
mean(mtcars$mpg)
mean(mtcars$mpg) + 1.96 * plotrix::std.error(mtcars$mpg)
mean_original = mean(mtcars$mpg)
mean_new = 13
mean_original = mean(mtcars$mpg)
upper = mean(mtcars$mpg) + 1.96 * (sd(mtcars$mpg)/ sqrt(sum(!is.na(mtcars$mpg))))
lower = mean(mtcars$mpg) - 1.96 * (sd(mtcars$mpg)/ sqrt(sum(!is.na(mtcars$mpg))))
ggplot()+
geom_bar(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_bar(aes(x = "weighted sample", y = m), stat = "identity", fill = "white", color = "black") +
theme_bw()
ggplot()+
geom_bar(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_bar(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw()
ggplot()+
geom_point(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_bar(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab(variable)
variable = "mpg"
admin_sample = mtcars[variable]
mean_original = mean(admin_sample)
admin_sample = unlist(mtcars[variable])
mean_original = mean(admin_sample)
variable = "mpg"
mean_new = 13
sample_original = unlist(mtcars[variable])
mean_original = mean(sample_original)
upper = mean_original + 1.96 * (sd(sample_original)/ sqrt(sum(!is.na(sample_original))))
lower = mean_original - 1.96 * (sd(sample_original)/ sqrt(sum(!is.na(sample_original))))
ggplot()+
geom_point(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_bar(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab(variable)
ggplot()+
geom_bar(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_bar(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab(variable)
ggplot()+
geom_bar(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(lower, upper)) +
geom_bar(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab(variable)
ggplot()+
geom_bar(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(xmin = "original sample", xmax = "original sample", ymin = lower, ymax = upper)) +
geom_bar(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab(variable)
ggplot()+
geom_bar(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "original sample", ymin = lower, ymax = upper)) +
geom_bar(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab(variable)
ggplot()+
geom_bar(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "original sample", ymin = lower, ymax = upper), width = 0.2) +
geom_bar(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab(variable)
ggplot()+
geom_bar(aes(x = "original sample", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "original sample", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "weighted sample", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab(variable) +
coord_flip()
ggplot()+
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", color = "black") +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot()+
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black", label = "reweighted") +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new, label = "reweighted"), stat = "identity", fill = "white", cex = 2, color = "black") +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes( label = "reweighted"))
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes( label = "reweighted"), inherit.aes = T) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted")) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", hjust = 0.1)) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = 0.1)) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = 0.5)) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5)) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_point(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5)) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5)) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5)) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
comparison_plot(mtcars, "mpg", 22)
comparison_plot = function(my_data, variable, mean_new){
sample_original = unlist(my_data[variable])
mean_original = mean(sample_original)
upper = mean_original + 1.96 * (sd(sample_original)/ sqrt(sum(!is.na(sample_original))))
lower = mean_original - 1.96 * (sd(sample_original)/ sqrt(sum(!is.na(sample_original))))
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5)) +
theme_bw() +
ylab("") +
xlab(variable) +
coord_flip()
}
comparison_plot(mtcars, "mpg", 22)
plot_borders = sort(upper, lower, 0, mean_new)
plot_borders = sort(c(upper, lower, 0, mean_new))
plot_borders = sort(c(upper, lower, 0, mean_new))
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5, vjust = -1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -3)) +
theme_bw() +
ylim(c(plot_borders[0], plot_borders[4]))
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 2, color = "black", vjust = -1.5) +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -3)) +
theme_bw() +
ylim(c(plot_borders[0], plot_borders[4]))
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new, vjust = -1.5), stat = "identity", fill = "white", cex = 2, color = "black") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -3)) +
theme_bw() +
ylim(c(plot_borders[0], plot_borders[4]))
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new, vjust = -1.5), stat = "identity", fill = "white", cex = 2, color = "darkred") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -3)) +
theme_bw() +
ylim(c(plot_borders[0], plot_borders[4])) +
ylab("") +
xlab(variable) +
coord_flip()
c(plot_borders[0], plot_borders[4])
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new, vjust = -1.5), stat = "identity", fill = "white", cex = 2, color = "darkred") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -3)) +
theme_bw() +
ylim(c(plot_borders[1], plot_borders[4])) +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 3, color = "darkred") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5)) +
theme_bw() +
ylim(c(plot_borders[1], plot_borders[4])) +
ylab("") +
xlab(variable) +
coord_flip()
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 3, color = "darkred") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5), color = "darkred" +
theme_bw() +
ylim(c(plot_borders[1], plot_borders[4])) +
ylab("") +
xlab(variable) +
coord_flip()
}
comparison_plot(mtcars, "mpg", 22)
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 3, color = "darkred") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5), color = "darkred" +
theme_bw() +
ylim(c(plot_borders[1], plot_borders[4])) +
ylab("") +
xlab(variable) +
coord_flip()
}
comparison_plot(mtcars, "mpg", 22)
comparison_plot = function(my_data, variable, mean_new){
comparison_plot = function(my_data, variable, mean_new){
comparison_plot = function(my_data, variable, mean_new){
sample_original = unlist(my_data[variable])
mean_original = mean(sample_original)
upper = mean_original + 1.96 * (sd(sample_original)/ sqrt(sum(!is.na(sample_original))))
lower = mean_original - 1.96 * (sd(sample_original)/ sqrt(sum(!is.na(sample_original))))
plot_borders = sort(c(upper, lower, 0, mean_new))
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 3, color = "darkred") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5), color = "darkred" +
theme_bw() +
ylim(c(plot_borders[1], plot_borders[4])) +
ylab("") +
xlab(variable) +
coord_flip()
}
comparison_plot = function(my_data, variable, mean_new){
sample_original = unlist(my_data[variable])
mean_original = mean(sample_original)
upper = mean_original + 1.96 * (sd(sample_original)/ sqrt(sum(!is.na(sample_original))))
lower = mean_original - 1.96 * (sd(sample_original)/ sqrt(sum(!is.na(sample_original))))
plot_borders = sort(c(upper, lower, 0, mean_new))
ggplot() +
geom_bar(aes(x = "", y = mean_original), stat = "identity", fill = "white", color = "black") +
geom_errorbar(aes(x = "", ymin = lower, ymax = upper), width = 0.2, size = 1.5) +
geom_point(aes(x = "", y = mean_new), stat = "identity", fill = "white", cex = 3, color = "darkred") +
geom_text(aes(x = "", y = mean_new, label = "reweighted", vjust = -1.5), color = "darkred") +
theme_bw() +
ylim(c(plot_borders[1], plot_borders[4])) +
ylab("") +
xlab(variable) +
coord_flip()
}
comparison_plot(mtcars, "mpg", 22)
shiny::runApp()
setwd("~/shiny_default")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
